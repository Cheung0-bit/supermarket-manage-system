<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zhanglin.server.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="signature" column="signature" jdbcType="VARCHAR"/>
        <result property="enable" column="enable" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <association property="sysRole" select="top.zhanglin.server.mapper.SysRoleMapper.queryById" column="role_id"
                     fetchType="eager">
        </association>
    </resultMap>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user (role_id, user_name, password, avatar, signature, enable)
        values (#{sysRole.roleId}, #{username}, #{password}, #{avatar}, #{signature}, #{enable})
    </insert>

    <update id="updateEnable">
        update sys_user
        set enable = #{enable}
        where id = #{userId}
    </update>

    <update id="update">
        update sys_user
        set role_id   = #{sysRole.roleId}
          , user_name = #{username}
          , password  = #{password}
          , signature = #{signature}
          , avatar    = #{avatar}
          , enable    = #{enable}
        where id = #{id}
    </update>

    <update id="updatePassword">
        update sys_user
        set password = #{password}
        where id = #{userId}
    </update>

    <update id="updateRoleId">
        update sys_user
        set role_id = #{roleId}
        where id = #{userId}
        limit 1
    </update>

    <delete id="deleteByIdInt">
        delete
        from sys_user
        where id = #{userId}
    </delete>

    <select id="queryById" resultMap="SysUserMap">
        select *
        from sys_user
        where id = #{userId}
        limit 1
    </select>

    <select id="queryByNameSysUser" resultMap="SysUserMap">
        select *
        from sys_user
        where user_name = #{username}
        limit 1
    </select>

    <select id="queryAll" resultMap="SysUserMap">
        select *
        from sys_user
        where IFNULL(user_name, '') LIKE CONCAT('%', ifnull(#{username},
                                                            ''), '%')
    </select>

</mapper>

